<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaok.user.common.dao.TbRolePermessionMapper">
  <resultMap id="BaseResultMap" type="com.xiaok.user.common.entity.TbRolePermession">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_id" jdbcType="VARCHAR" property="permissionId" />
    <result column="rp_explain" jdbcType="VARCHAR" property="rpExplain" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="app_type" jdbcType="VARCHAR" property="appType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, permission_id, rp_explain, app_id, app_type, create_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_role_permession
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_role_permession
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaok.user.common.entity.TbRolePermession">
    insert into tb_role_permession (id, role_id, permission_id, 
      rp_explain, app_id, app_type, 
      create_time, remark)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{permissionId,jdbcType=VARCHAR}, 
      #{rpExplain,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{appType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaok.user.common.entity.TbRolePermession">
    insert into tb_role_permession
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="rpExplain != null">
        rp_explain,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appType != null">
        app_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="rpExplain != null">
        #{rpExplain,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appType != null">
        #{appType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaok.user.common.entity.TbRolePermession">
    update tb_role_permession
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="rpExplain != null">
        rp_explain = #{rpExplain,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appType != null">
        app_type = #{appType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaok.user.common.entity.TbRolePermession">
    update tb_role_permession
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=VARCHAR},
      rp_explain = #{rpExplain,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      app_type = #{appType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>